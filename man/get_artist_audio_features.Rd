% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_artist_audio_features.R
\name{get_artist_audio_features}
\alias{get_artist_audio_features}
\title{Get features and popularity for an artist's entire discography on Spotify}
\usage{
get_artist_audio_features(artist_name = NULL, artist_uri = NULL,
  use_artist_uri = FALSE, return_closest_artist = TRUE,
  studio_albums_only = TRUE, message = FALSE,
  access_token = get_spotify_access_token())
}
\arguments{
\item{artist_name}{String of artist name}

\item{artist_uri}{String of Spotify artist URI. Will only be applied if \code{use_arist_uri} is set to \code{TRUE}. This is useful for pulling related artists in bulk and allows for more accurate matching since Spotify URIs are unique.}

\item{use_artist_uri}{Boolean determining whether to search by Spotify URI instead of an artist name. If \code{TRUE}, you must also enter an \code{artist_uri}. Defaults to \code{FALSE}.}

\item{return_closest_artist}{Boolean for selecting the artist result with the closest match on Spotify's Search endpoint. Defaults to \code{TRUE}.}

\item{studio_albums_only}{Logical for whether to remove album types "single" and "compilation" and albums with mulitple artists. Defaults to \code{TRUE}}

\item{message}{Boolean for printing the name of artist matched when using \code{return_closest_artist = TRUE}. Defaults to \code{FALSE}.}

\item{access_token}{Spotify Web API token. Defaults to spotifyr::get_spotify_access_token()}
}
\description{
This function returns the popularity and audio features for every song and album for a given artist on Spotify
}
\examples{
\dontrun{
radiohead_features <- get_artist_audio_features(artist_name = 'radiohead')
}
}
\keyword{audio}
\keyword{discography}
\keyword{features}
\keyword{track}
